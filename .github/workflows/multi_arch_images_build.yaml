---
name: 'multi-arch images build'
 
on: push
env:
      IMAGE_NAME: hello-world-multiarch
      IMAGE_REGISTRY: quay.io
      IMAGE_NAMESPACE: mayurwaghmode111
      IMAGE_TAG: latest
  
jobs:
  multiarch-build:
    
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [ "linux/amd64", "linux/ppc64le" ]
        install_latest: [ true, false ]
        

    steps:
      - name: add checkout action...
        uses: actions/checkout@v2
        with:
          path: "multiarch-image"
          
      - name: Install latest podman
        if: matrix.install_latest
        run: |
          bash multiarch-image/.github/install_latest_podman.sh
     
      - name: Install latest buildah
        if: matrix.install_latest
        run: |
          bash multiarch-image/.github/install_latest_buildah.sh
 
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
 
      - name: Create Containerfile
        run: |
          cat > Containerfile<<EOF
          FROM ubuntu:20.04
          CMD echo "Hello World from a container running on $(uname -m);"
          EOF
 
 
      - name: Build Image
        id: build_image_multiarch
        uses: ./multiarch-image
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          platform: ${{ matrix.platform }}
          containerfiles: |
            ./Containerfile

      - name: Echo Outputs
        run: |
          echo "Image: ${{ steps.build_image_multiarch.outputs.image }}"
          echo "Tags: ${{ steps.build_image_multiarch.outputs.tags }}"
          echo "Tagged Image: ${{ steps.build_image_multiarch.outputs.image-with-tag }}"
          
          
      - name: Push To Quay
        uses: ./multiarch-image
        id: push
        with:
          image: ${{ steps.build_image_multiarch.outputs.image }}
          tags: ${{ env.IMAGE_TAG }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}
          username:  ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PWD }}
          extra-args: |
            --disable-content-trust
            
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"
          
