---
name: 'multi-arch images build'
 
on: push

env:
  IMAGE_TAG: latest
 
jobs:
  multiarch-build:
    env:
      IMAGE_NAME: hello-world-multiarch
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ amd64, ppc64le ]
        install_latest: [ true, false ]

    steps:
      - name: add checkout action...
        uses: actions/checkout@v2
        with:
          path: "multiarch-image"
      - name: Install latest buildah
        if: matrix.install_latest
        run: |
          bash multiarch-image/.github/install_latest_buildah.sh
 
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
 
      - name: Create Containerfile
        run: |
          cat > Containerfile<<EOF
          FROM ubuntu:20.04
          CMD echo "Hello World from a container running on $(uname -m);"
          EOF
 
 
      - name: Build Image
        id: build_image_multiarch
        uses: ./multiarch-image
        with:
          image: ${{ env.IMAGE_NAME }}
          arch: ${{ matrix.arch }}
          build-args: ARCH=${{ matrix.arch }}
          containerfiles: |
            ./Containerfile
          platforms: linux/amd64,linux/ppc64le
          push: true
          tags: quay.io/mayurwaghmode111/multiarch-image
          
      - name: Push To quay.io
        id: push-to-quay
        uses: multiarch-image/push-to-registry@v2
        with:
          image: ${{ steps.build_image_multiarch.outputs.image }}
          tags: latest
          registry: quay.io/mayurwaghmode111
          username:  ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PWD }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
